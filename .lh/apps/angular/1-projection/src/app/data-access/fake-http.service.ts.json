{
  "sourceFile": "apps/angular/1-projection/src/app/data-access/fake-http.service.ts",
  "activeCommit": 0,
  "commits": [
    {
      "activePatchIndex": 0,
      "patches": [
        {
          "date": 1742859403327,
          "content": "Index: \n===================================================================\n--- \n+++ \n"
        }
      ],
      "date": 1742859403327,
      "name": "Commit-0",
      "content": "import { Injectable } from '@angular/core';\r\nimport {\r\n  incrementalNumber,\r\n  rand,\r\n  randCity,\r\n  randCountry,\r\n  randFirstName,\r\n  randLastName,\r\n  randNumber,\r\n  randWord,\r\n} from '@ngneat/falso';\r\nimport { map, timer } from 'rxjs';\r\nimport { City } from '../model/city.model';\r\nimport { Student } from '../model/student.model';\r\nimport { Teacher, subject } from '../model/teacher.model';\r\n\r\nconst factoryTeacher = incrementalNumber();\r\n\r\nexport const randTeacher = () => ({\r\n  id: factoryTeacher(),\r\n  firstName: randFirstName(),\r\n  lastName: randLastName(),\r\n  subject: rand(subject),\r\n});\r\n\r\nconst teachers: Teacher[] = [\r\n  randTeacher(),\r\n  randTeacher(),\r\n  randTeacher(),\r\n  randTeacher(),\r\n];\r\n\r\nconst factoryStudent = incrementalNumber();\r\n\r\nexport const randStudent = (): Student => ({\r\n  id: factoryStudent(),\r\n  firstName: randFirstName(),\r\n  lastName: randLastName(),\r\n  mainTeacher: teachers[randNumber({ max: teachers.length - 1 })],\r\n  school: randWord(),\r\n});\r\n\r\nconst students: Student[] = [\r\n  randStudent(),\r\n  randStudent(),\r\n  randStudent(),\r\n  randStudent(),\r\n  randStudent(),\r\n];\r\n\r\nconst factoryCity = incrementalNumber();\r\n\r\nexport const randomCity = (): City => ({\r\n  id: factoryCity(),\r\n  name: randCity(),\r\n  country: randCountry(),\r\n});\r\n\r\nconst cities = [randomCity(), randomCity(), randomCity()];\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FakeHttpService {\r\n  fetchTeachers$ = timer(500).pipe(map(() => teachers));\r\n  fetchStudents$ = timer(500).pipe(map(() => students));\r\n  fetchCities$ = timer(500).pipe(map(() => cities));\r\n}\r\n"
    }
  ]
}
